# ОБЪЕКТНО-ОРИЕНТИРОВАННОЕ ПРОГРАММИРОВАНИЕ (ООП)
import random
from classy import Kart    # из модуля classy импортируем класс Kart - выводит карточку в три строки
from classy import Bag     # из модуля classy импортируем класс Bag - работает с бочонками

kart = Kart()       #  создаем конкретный объект  карточка  kart - хранит карточку построчно

kart_my = [' ', 9, 43, 61, ' ', ' ', ' ', 74, 90, 2, ' ', 27, ' ', 75, 78, ' ', 82, ' ', ' ', 41, 56, 65, ' ', 76, ' ', ' ', 86]
kart_pk = [  7, 87,' ', 13, 14, ' ', 11,' ', ' ', ' ', ' ', 16, 49,' ', 55, 88, ' ', 77, ' ', 15, 20, ' ', 45,' ', ' ', 76, 85]

bag = Bag()  # создал объект bag (создаем пустой мешок)
ostatok = bag.set() # 90 бочонков кладем в мешок (в переменную ostatok)

while True:
    print()   # пустая строка для удобства
    print(ostatok)  # это для проверки
    print("Выпал номер: ", ostatok[0]) # печатаем выпавшее случайное число (вынутый из мешка бочонок)
    print("***** Моя карточка ***") # заголовок карточки игрока
    kart.add(kart_my) # Загружаем в свойство spisok карточку игрока ПОСТРОЧНО  применяем  Метод add
    print(kart.spisok)             # печатаем карточку игрока ПОСТРОЧНО (свойство spisok)
    print()   # пустая строка для удобства
    print("***** Карточка ПК  ***") # заголовок карточки ПК
    kart.add(kart_pk) # Загружаем в свойство spisok карточку ПК  ПОСТРОЧНО  применяем  Метод add
    print(kart.spisok)             # печатаем карточку ПК  (свойство spisok)
    antwort = str.upper(input("Зачеркнуть Y - Да, N - нет: ")) # upper - перевод в верхний регистр

    # ОБРАБОТКА РЕШЕНИЯ ИГРОКА
    if antwort == 'Y':  # делаем, если нажата клавиша Y
        if ostatok[0] in kart_my: # если номер вынутого бочонка имеется в карточке игрока
            for index, item in enumerate(kart_my): # пробегаем по массиву kart_my
                if item == ostatok[0]:  # если значение (item) элемента массива равно номеру бочонка
                    kart_my[index] = "-" # значение элемента с текущим index заменяем на "-"
        else:           # делаем, если номер вынутого бочонка отсутствует в карточке игрока
            print("Вы Проиграли. Игра завершена") # так как бочонка в карточке нет, а вы нажали - Y
            exit() # выход из программы
    else:               # делаем, если нажали НЕ  Y, а  N - т.е. сказали, что бочонка нет
        if ostatok[0] in kart_my: # а номер бочонка в карточке есть
            print("Вы Проиграли. Игра завершена") # так как вы ошиблись
            exit() # выход из программы

    # ОБРАБОТКА РЕШЕНИЯ ПК
    if ostatok[0] in kart_pk:   # делаем, если номер вынутого бочонка имеется в карточке ПК
        for index, item in enumerate(kart_pk):  # пробегаем по массиву kart_pk
            if item == ostatok[0]:  # если значение (item) элемента массива равно номеру бочонка
                kart_pk[index] = "-" # значение элемента с текущим index заменяем на "-"

    ostatok = bag.de_set(ostatok) # из массива ostatok удаляем первый элемент (убираем вынутый бочонок)